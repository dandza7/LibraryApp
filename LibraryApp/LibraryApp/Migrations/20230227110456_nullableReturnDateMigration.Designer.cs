// <auto-generated />
using System;
using LibraryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230227110456_nullableReturnDateMigration")]
    partial class nullableReturnDateMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<long>("AuthorsId")
                        .HasColumnType("bigint");

                    b.Property<long>("BooksId")
                        .HasColumnType("bigint");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("LibraryApp.Models.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7469),
                            FirstName = "Ljubo",
                            IsDeleted = false,
                            LastName = "Nedovic",
                            ModifiedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7472)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7478),
                            FirstName = "Rade",
                            IsDeleted = false,
                            LastName = "Doroslovacki",
                            ModifiedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7479)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7483),
                            FirstName = "Damir",
                            IsDeleted = false,
                            LastName = "Madjarevic",
                            ModifiedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7485)
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Cover")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7080),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7096),
                            Name = "Algebra Testovi",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7320),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7323),
                            Name = "Algebra",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7327),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7328),
                            Name = "Mehanika",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7331),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(7333),
                            Name = "Zbirka zadataka iz Mehanike",
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.RentedBook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RentedBooks");
                });

            modelBuilder.Entity("LibraryApp.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 27, 12, 4, 55, 801, DateTimeKind.Local).AddTicks(5197),
                            Email = "dane.m.12@gmail.com",
                            FirstName = "Dane",
                            IsDeleted = false,
                            LastName = "Milisic",
                            ModifiedDate = new DateTime(2023, 2, 27, 12, 4, 55, 801, DateTimeKind.Local).AddTicks(5233),
                            Password = "B8D9D8A0A7FACE7DD3DBD150A3D6066F48C15CF9838097559CB527E147A6D73CFFD3895155736B4C48721A3C431E202AD6365B8AC9B495E670A3D0053208A161",
                            Role = "USER",
                            Salt = new byte[] { 220, 143, 86, 231, 98, 46, 74, 204, 121, 220, 170, 154, 33, 162, 51, 85, 49, 64, 52, 21, 61, 226, 135, 7, 211, 27, 0, 83, 12, 53, 250, 53, 182, 254, 150, 128, 102, 24, 95, 176, 51, 117, 113, 69, 43, 108, 133, 20, 220, 240, 206, 20, 91, 253, 163, 228, 130, 248, 230, 91, 83, 132, 58, 123 }
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 27, 12, 4, 56, 25, DateTimeKind.Local).AddTicks(2718),
                            Email = "woox.gg@gmail.com",
                            FirstName = "Nikola",
                            IsDeleted = false,
                            LastName = "Vukic",
                            ModifiedDate = new DateTime(2023, 2, 27, 12, 4, 56, 25, DateTimeKind.Local).AddTicks(2754),
                            Password = "452FEC383B6B5438A288CBF43C0A4BFC18C64A5884A8ED6F23EF945FDB140F2F5B549938783F54492CA64743CAFF16EB4AB8E950A47B8914E7580E8314C1046F",
                            Role = "LIBRARIAN",
                            Salt = new byte[] { 131, 227, 117, 184, 235, 174, 101, 129, 188, 249, 208, 200, 208, 66, 240, 87, 246, 32, 112, 221, 184, 29, 75, 135, 56, 215, 75, 248, 120, 18, 248, 108, 46, 129, 131, 89, 196, 221, 108, 120, 235, 189, 35, 71, 217, 9, 46, 57, 171, 209, 251, 185, 164, 133, 248, 136, 203, 124, 19, 16, 5, 224, 37, 47 }
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 27, 12, 4, 56, 244, DateTimeKind.Local).AddTicks(964),
                            Email = "djokeen@gmail.com",
                            FirstName = "Djordje",
                            IsDeleted = false,
                            LastName = "Rasic",
                            ModifiedDate = new DateTime(2023, 2, 27, 12, 4, 56, 244, DateTimeKind.Local).AddTicks(1001),
                            Password = "2A6605E0702086EB2EEB6BBE5FA72F7C613F86CE8BC896AC6A8F1C9246AFA6479659B73BBE65D93855FC45AEFD3FAC7E7238AF022737A24A156E0C0640EAFE79",
                            Role = "ADMIN",
                            Salt = new byte[] { 202, 229, 179, 4, 89, 6, 59, 77, 162, 94, 38, 117, 224, 108, 21, 121, 153, 192, 24, 18, 151, 235, 61, 167, 43, 118, 163, 223, 255, 230, 199, 161, 170, 102, 161, 132, 248, 84, 65, 200, 251, 102, 107, 230, 51, 19, 41, 185, 208, 213, 10, 24, 167, 209, 52, 224, 55, 13, 134, 84, 161, 214, 66, 46 }
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(5832),
                            Email = "kikimaher@gmail.com",
                            FirstName = "Kristijan",
                            IsDeleted = true,
                            LastName = "Trnjanac",
                            ModifiedDate = new DateTime(2023, 2, 27, 12, 4, 56, 461, DateTimeKind.Local).AddTicks(5868),
                            Password = "FD5EE443F698A6BCB52C2124A07198B0369FD9E4E343EC5E17C3A2E764F1167A3B1890160CFF6C2B89414B5985342E141B2A57BE80FC986EE1C3777F5A8C3E42",
                            Role = "USER",
                            Salt = new byte[] { 27, 198, 60, 78, 108, 46, 4, 186, 75, 50, 104, 213, 154, 92, 0, 61, 56, 179, 25, 73, 35, 97, 243, 194, 48, 61, 214, 179, 28, 103, 17, 140, 72, 50, 175, 214, 84, 174, 116, 87, 133, 58, 186, 6, 90, 231, 90, 157, 241, 140, 32, 46, 104, 159, 107, 169, 46, 28, 101, 130, 175, 245, 195, 224 }
                        });
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("LibraryApp.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryApp.Models.RentedBook", b =>
                {
                    b.HasOne("LibraryApp.Models.Book", "Book")
                        .WithMany("RentedBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.User", "User")
                        .WithMany("RentedBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Navigation("RentedBooks");
                });

            modelBuilder.Entity("LibraryApp.Models.User", b =>
                {
                    b.Navigation("RentedBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
