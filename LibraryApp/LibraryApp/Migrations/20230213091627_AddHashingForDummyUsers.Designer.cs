// <auto-generated />
using System;
using LibraryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230213091627_AddHashingForDummyUsers")]
    partial class AddHashingForDummyUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<long>("AuthorsId")
                        .HasColumnType("bigint");

                    b.Property<long>("BooksId")
                        .HasColumnType("bigint");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("LibraryApp.Models.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7221),
                            FirstName = "Ljubo",
                            LastName = "Nedovic",
                            ModifiedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7222)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7226),
                            FirstName = "Rade",
                            LastName = "Doroslovacki",
                            ModifiedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7227)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7229),
                            FirstName = "Damir",
                            LastName = "Madjarevic",
                            ModifiedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7230)
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7022),
                            ModifiedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7023),
                            Name = "Algebra Testovi"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7033),
                            ModifiedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7034),
                            Name = "Algebra"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7098),
                            ModifiedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7101),
                            Name = "Mehanika"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7107),
                            ModifiedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(7119),
                            Name = "Zbirka zadataka iz Mehanike"
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 13, 10, 16, 26, 581, DateTimeKind.Local).AddTicks(2140),
                            Email = "dane.m.12@gmail.com",
                            FirstName = "Dane",
                            LastName = "Milisic",
                            ModifiedDate = new DateTime(2023, 2, 13, 10, 16, 26, 581, DateTimeKind.Local).AddTicks(2183),
                            Password = "4BD0DF794662D3B44E7346E269B403DF6C4D27D8B63DB55E0F05159E4F38954CFBDAAA9D6C6194A9FC03E20AFFF882A138E3683B43C11271D7FDA175EEB9AFF4",
                            Role = "USER",
                            Salt = new byte[] { 183, 72, 44, 218, 119, 41, 107, 218, 225, 27, 36, 84, 220, 139, 131, 62, 171, 58, 14, 232, 109, 70, 243, 128, 186, 62, 156, 206, 107, 222, 152, 52, 148, 176, 251, 163, 108, 63, 85, 67, 104, 98, 69, 199, 18, 98, 109, 71, 37, 21, 88, 94, 106, 7, 226, 28, 15, 166, 204, 234, 123, 209, 133, 61 }
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 13, 10, 16, 26, 751, DateTimeKind.Local).AddTicks(4496),
                            Email = "woox.gg@gmail.com",
                            FirstName = "Nikola",
                            LastName = "Vukic",
                            ModifiedDate = new DateTime(2023, 2, 13, 10, 16, 26, 751, DateTimeKind.Local).AddTicks(4536),
                            Password = "D265FA577E8B746B53B658D90ADB1B795F6E6DCA12F24ADF05A4BD8A39780664C0A49C38EFA54D925F49521F0390F67288CBB8E1A4E21088B26134950934B492",
                            Role = "LIBRARIAN",
                            Salt = new byte[] { 61, 73, 173, 36, 0, 110, 221, 243, 156, 84, 72, 90, 34, 34, 107, 112, 69, 65, 185, 67, 98, 253, 109, 249, 40, 90, 98, 56, 233, 0, 193, 241, 208, 245, 8, 104, 134, 254, 23, 161, 18, 223, 81, 188, 71, 119, 240, 78, 19, 217, 195, 228, 142, 60, 239, 3, 206, 88, 202, 239, 154, 67, 91, 2 }
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(6497),
                            Email = "djokeen@gmail.com",
                            FirstName = "Djordje",
                            LastName = "Rasic",
                            ModifiedDate = new DateTime(2023, 2, 13, 10, 16, 26, 924, DateTimeKind.Local).AddTicks(6525),
                            Password = "2FACFF9DAEBE8A971500660A8E74E5532FFEB1CC47D560FBE4D9E33C7B6D3BDE9F65DD04E2931C573BD71860A2591E7F3C27414C2443148B79308CB507231E10",
                            Role = "ADMIN",
                            Salt = new byte[] { 13, 47, 185, 18, 104, 174, 141, 117, 188, 22, 98, 146, 88, 79, 31, 74, 228, 180, 168, 161, 143, 204, 165, 60, 25, 145, 132, 228, 116, 89, 162, 216, 180, 66, 195, 176, 118, 119, 96, 20, 58, 103, 113, 82, 43, 36, 86, 194, 223, 235, 205, 11, 41, 88, 244, 240, 41, 191, 118, 186, 232, 216, 127, 255 }
                        });
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("LibraryApp.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
