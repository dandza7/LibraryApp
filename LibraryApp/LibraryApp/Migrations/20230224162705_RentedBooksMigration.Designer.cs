// <auto-generated />
using System;
using LibraryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230224162705_RentedBooksMigration")]
    partial class RentedBooksMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<long>("AuthorsId")
                        .HasColumnType("bigint");

                    b.Property<long>("BooksId")
                        .HasColumnType("bigint");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("LibraryApp.Models.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6172),
                            FirstName = "Ljubo",
                            IsDeleted = false,
                            LastName = "Nedovic",
                            ModifiedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6174)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6179),
                            FirstName = "Rade",
                            IsDeleted = false,
                            LastName = "Doroslovacki",
                            ModifiedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6181)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6184),
                            FirstName = "Damir",
                            IsDeleted = false,
                            LastName = "Madjarevic",
                            ModifiedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6186)
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Cover")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(5963),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(5977),
                            Name = "Algebra Testovi",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6035),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6038),
                            Name = "Algebra",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6042),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6043),
                            Name = "Mehanika",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6047),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(6048),
                            Name = "Zbirka zadataka iz Mehanike",
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.RentedBook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RentedBooks");
                });

            modelBuilder.Entity("LibraryApp.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 24, 17, 27, 5, 23, DateTimeKind.Local).AddTicks(4709),
                            Email = "dane.m.12@gmail.com",
                            FirstName = "Dane",
                            IsDeleted = false,
                            LastName = "Milisic",
                            ModifiedDate = new DateTime(2023, 2, 24, 17, 27, 5, 23, DateTimeKind.Local).AddTicks(4745),
                            Password = "5BF1BEFF18A7B62FE96FB7AD4F8179BFF6F6DC00DB25F1ADD50DB1CD742AD03815A6347D917AC9B4BD151E946639931843730BC8274649CCDE69B6A16A96ED59",
                            Role = "USER",
                            Salt = new byte[] { 105, 75, 64, 2, 44, 137, 197, 45, 8, 219, 65, 122, 76, 219, 73, 94, 196, 59, 219, 237, 179, 253, 7, 27, 87, 125, 144, 186, 253, 89, 100, 64, 160, 134, 204, 14, 223, 68, 255, 15, 19, 104, 63, 28, 29, 248, 214, 86, 235, 236, 126, 178, 207, 167, 253, 164, 240, 209, 52, 37, 16, 118, 165, 45 }
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 24, 17, 27, 5, 249, DateTimeKind.Local).AddTicks(7395),
                            Email = "woox.gg@gmail.com",
                            FirstName = "Nikola",
                            IsDeleted = false,
                            LastName = "Vukic",
                            ModifiedDate = new DateTime(2023, 2, 24, 17, 27, 5, 249, DateTimeKind.Local).AddTicks(7446),
                            Password = "DBA8417873556C394704C9B0103D8106C27B134BA2B6A6A9A0E3728231D747D479330C677827360E2EF81BAF93AE0F40B48E2E7414051FC4F4D0B5318196B741",
                            Role = "LIBRARIAN",
                            Salt = new byte[] { 54, 187, 201, 53, 44, 137, 247, 53, 188, 44, 224, 155, 204, 177, 133, 99, 100, 243, 4, 107, 95, 110, 127, 84, 182, 5, 83, 6, 20, 252, 215, 126, 116, 193, 47, 211, 87, 4, 131, 171, 106, 100, 132, 60, 161, 214, 112, 10, 252, 10, 18, 212, 87, 72, 233, 131, 134, 195, 180, 131, 151, 36, 171, 241 }
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 24, 17, 27, 5, 477, DateTimeKind.Local).AddTicks(2446),
                            Email = "djokeen@gmail.com",
                            FirstName = "Djordje",
                            IsDeleted = false,
                            LastName = "Rasic",
                            ModifiedDate = new DateTime(2023, 2, 24, 17, 27, 5, 477, DateTimeKind.Local).AddTicks(2492),
                            Password = "80BCAB67B45F5CD00A54DA1F623C79E7CA69B2D72474C5982CF93CD325050F4F9427B88EB3E5F4EEBE77A34B4A01CB5C80F32EF4AFCAC350E2301FE2ADD49B6E",
                            Role = "ADMIN",
                            Salt = new byte[] { 15, 201, 109, 152, 177, 176, 238, 94, 172, 238, 18, 53, 26, 192, 19, 141, 69, 254, 241, 44, 128, 63, 172, 133, 117, 248, 137, 179, 181, 111, 151, 3, 82, 92, 247, 209, 249, 128, 106, 106, 139, 145, 137, 163, 216, 28, 219, 159, 71, 170, 139, 157, 131, 58, 64, 148, 45, 247, 152, 203, 182, 199, 19, 22 }
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(4765),
                            Email = "kikimaher@gmail.com",
                            FirstName = "Kristijan",
                            IsDeleted = true,
                            LastName = "Trnjanac",
                            ModifiedDate = new DateTime(2023, 2, 24, 17, 27, 5, 704, DateTimeKind.Local).AddTicks(4802),
                            Password = "4BC1EC882F19CEE5CDC20E7DF939BC2294A33097782C7AC57BDABDF1EB4E332CCEA3282C124B47A3E4D27F94288455BBD832A2D4FAA5136CFF1E307146D6C05E",
                            Role = "USER",
                            Salt = new byte[] { 2, 186, 15, 253, 238, 47, 127, 57, 217, 2, 80, 13, 197, 119, 76, 47, 255, 225, 245, 89, 255, 122, 111, 179, 246, 92, 192, 220, 207, 158, 141, 72, 215, 161, 111, 31, 224, 37, 244, 206, 3, 88, 112, 48, 251, 84, 75, 74, 70, 98, 36, 130, 12, 168, 207, 178, 223, 211, 221, 69, 233, 23, 121, 54 }
                        });
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("LibraryApp.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryApp.Models.RentedBook", b =>
                {
                    b.HasOne("LibraryApp.Models.Book", "Book")
                        .WithMany("RentedBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.User", "User")
                        .WithMany("RentedBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Navigation("RentedBooks");
                });

            modelBuilder.Entity("LibraryApp.Models.User", b =>
                {
                    b.Navigation("RentedBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
