// <auto-generated />
using System;
using LibraryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230224123525_BookCoverMigration")]
    partial class BookCoverMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<long>("AuthorsId")
                        .HasColumnType("bigint");

                    b.Property<long>("BooksId")
                        .HasColumnType("bigint");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("LibraryApp.Models.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6848),
                            FirstName = "Ljubo",
                            IsDeleted = false,
                            LastName = "Nedovic",
                            ModifiedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6852)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6859),
                            FirstName = "Rade",
                            IsDeleted = false,
                            LastName = "Doroslovacki",
                            ModifiedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6861)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6867),
                            FirstName = "Damir",
                            IsDeleted = false,
                            LastName = "Madjarevic",
                            ModifiedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6868)
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Cover")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6524),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6581),
                            Name = "Algebra Testovi",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6640),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6643),
                            Name = "Algebra",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6647),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6649),
                            Name = "Mehanika",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6652),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(6654),
                            Name = "Zbirka zadataka iz Mehanike",
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 24, 13, 35, 24, 471, DateTimeKind.Local).AddTicks(7268),
                            Email = "dane.m.12@gmail.com",
                            FirstName = "Dane",
                            IsDeleted = false,
                            LastName = "Milisic",
                            ModifiedDate = new DateTime(2023, 2, 24, 13, 35, 24, 471, DateTimeKind.Local).AddTicks(7306),
                            Password = "DD1A4EF3E6D5DC0AC1F0173EF1499064F2C2F841E2420267FCD7BC4805307F0E8A34EE44F2E3193C1F6F967AC71406454BD3DED7C82C2FE9FA016FBC5B24B877",
                            Role = "USER",
                            Salt = new byte[] { 109, 20, 185, 59, 47, 58, 44, 0, 107, 27, 59, 150, 90, 10, 172, 212, 157, 81, 88, 145, 125, 114, 99, 61, 235, 34, 3, 57, 190, 174, 37, 254, 50, 243, 36, 120, 83, 249, 29, 213, 135, 102, 195, 102, 88, 130, 90, 60, 171, 142, 59, 180, 129, 133, 177, 93, 198, 179, 184, 131, 21, 211, 38, 11 }
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 24, 13, 35, 24, 714, DateTimeKind.Local).AddTicks(716),
                            Email = "woox.gg@gmail.com",
                            FirstName = "Nikola",
                            IsDeleted = false,
                            LastName = "Vukic",
                            ModifiedDate = new DateTime(2023, 2, 24, 13, 35, 24, 714, DateTimeKind.Local).AddTicks(752),
                            Password = "941C0F084FFA95B83897A024A5F781409639499C99EB54791A28929E3415FC40D0F697B9BF9371A4E9B8B54EFA601CC493F17B75D6F3893B0D191D6358581692",
                            Role = "LIBRARIAN",
                            Salt = new byte[] { 248, 246, 77, 132, 31, 94, 151, 20, 134, 116, 178, 247, 216, 73, 175, 61, 234, 42, 116, 233, 114, 138, 115, 138, 233, 219, 137, 48, 73, 107, 39, 211, 229, 106, 11, 253, 16, 110, 193, 186, 239, 111, 1, 182, 108, 238, 32, 104, 136, 28, 249, 82, 156, 207, 202, 140, 155, 90, 92, 70, 159, 22, 71, 128 }
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 24, 13, 35, 24, 953, DateTimeKind.Local).AddTicks(8186),
                            Email = "djokeen@gmail.com",
                            FirstName = "Djordje",
                            IsDeleted = false,
                            LastName = "Rasic",
                            ModifiedDate = new DateTime(2023, 2, 24, 13, 35, 24, 953, DateTimeKind.Local).AddTicks(8222),
                            Password = "B1A27F2010A06F7C2FA28EC55D29E4AB9554A14C0681BA9CD8BF9EF8C62F4B9E7445D908B96856297CB58F7EB6461E8B2E81038F6A49FD6B94BD31CCB8A432C5",
                            Role = "ADMIN",
                            Salt = new byte[] { 2, 71, 53, 36, 231, 147, 189, 41, 203, 18, 50, 237, 95, 54, 251, 236, 192, 0, 239, 107, 1, 104, 85, 60, 237, 6, 125, 15, 139, 75, 202, 252, 51, 2, 241, 243, 78, 138, 197, 231, 110, 184, 187, 251, 33, 191, 58, 181, 55, 190, 36, 250, 206, 111, 60, 102, 8, 101, 73, 123, 122, 189, 106, 231 }
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(5218),
                            Email = "kikimaher@gmail.com",
                            FirstName = "Kristijan",
                            IsDeleted = true,
                            LastName = "Trnjanac",
                            ModifiedDate = new DateTime(2023, 2, 24, 13, 35, 25, 199, DateTimeKind.Local).AddTicks(5259),
                            Password = "D152272ED537032D76A58771DDF11995DF2DF10E7197372D3A8060BA9270A1BCFDC55680AC79BD05A1EB1BE556B6F041E351C54927DBAF389CC74EBF16746D9D",
                            Role = "USER",
                            Salt = new byte[] { 167, 7, 158, 58, 175, 92, 53, 199, 191, 110, 237, 93, 36, 107, 54, 143, 88, 108, 115, 27, 57, 13, 215, 29, 85, 129, 222, 53, 142, 41, 188, 26, 130, 75, 202, 101, 231, 251, 145, 248, 205, 204, 156, 240, 134, 242, 226, 19, 191, 159, 58, 138, 208, 96, 19, 97, 109, 101, 95, 149, 15, 224, 200, 25 }
                        });
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("LibraryApp.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
