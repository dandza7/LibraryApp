// <auto-generated />
using System;
using LibraryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230220142545_Added_IsDeleted_and_Quantity_fields")]
    partial class AddedIsDeletedandQuantityfields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<long>("AuthorsId")
                        .HasColumnType("bigint");

                    b.Property<long>("BooksId")
                        .HasColumnType("bigint");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("LibraryApp.Models.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8419),
                            FirstName = "Ljubo",
                            IsDeleted = false,
                            LastName = "Nedovic",
                            ModifiedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8420)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8424),
                            FirstName = "Rade",
                            IsDeleted = false,
                            LastName = "Doroslovacki",
                            ModifiedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8425)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8428),
                            FirstName = "Damir",
                            IsDeleted = false,
                            LastName = "Madjarevic",
                            ModifiedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8429)
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8297),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8303),
                            Name = "Algebra Testovi",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8320),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8326),
                            Name = "Algebra",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8387),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8388),
                            Name = "Mehanika",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8390),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(8391),
                            Name = "Zbirka zadataka iz Mehanike",
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 20, 15, 25, 44, 755, DateTimeKind.Local).AddTicks(663),
                            Email = "dane.m.12@gmail.com",
                            FirstName = "Dane",
                            IsDeleted = false,
                            LastName = "Milisic",
                            ModifiedDate = new DateTime(2023, 2, 20, 15, 25, 44, 755, DateTimeKind.Local).AddTicks(725),
                            Password = "E21AE9571C574BC02C4FB39302DD36C5897E3B33C8DFF6431F397C26D5FFE2650A1ED9C833D429F9EB432FE6D08B4CAB28B3342C5036298BC9F394E30E8B898F",
                            Role = "USER",
                            Salt = new byte[] { 42, 66, 95, 91, 144, 77, 164, 46, 120, 239, 120, 176, 95, 53, 229, 254, 249, 99, 77, 82, 158, 38, 117, 44, 90, 15, 60, 46, 229, 4, 68, 44, 227, 101, 207, 45, 11, 239, 170, 37, 20, 14, 193, 227, 190, 135, 57, 105, 92, 167, 130, 222, 174, 119, 14, 15, 62, 141, 11, 177, 106, 8, 235, 203 }
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 20, 15, 25, 44, 926, DateTimeKind.Local).AddTicks(3979),
                            Email = "woox.gg@gmail.com",
                            FirstName = "Nikola",
                            IsDeleted = false,
                            LastName = "Vukic",
                            ModifiedDate = new DateTime(2023, 2, 20, 15, 25, 44, 926, DateTimeKind.Local).AddTicks(4024),
                            Password = "CBB22A04C2D39465558C31CC31E77561FEE617C0FBD05A37A12606F456C1B7A0FAE7D3222C9A3FD3ED88C8920ACAB06DE516752941A480073295E85DA1CCC215",
                            Role = "LIBRARIAN",
                            Salt = new byte[] { 243, 41, 225, 35, 2, 69, 6, 16, 241, 38, 105, 243, 202, 207, 126, 8, 56, 179, 81, 196, 99, 39, 170, 55, 148, 191, 8, 169, 114, 113, 91, 166, 173, 154, 216, 163, 180, 204, 228, 59, 112, 171, 125, 83, 100, 228, 158, 171, 127, 105, 134, 81, 106, 145, 41, 43, 32, 127, 22, 55, 125, 68, 19, 167 }
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 20, 15, 25, 45, 99, DateTimeKind.Local).AddTicks(5732),
                            Email = "djokeen@gmail.com",
                            FirstName = "Djordje",
                            IsDeleted = false,
                            LastName = "Rasic",
                            ModifiedDate = new DateTime(2023, 2, 20, 15, 25, 45, 99, DateTimeKind.Local).AddTicks(5764),
                            Password = "B0B384989BD6078009003B7A0C24EB6301F9AC3246CC7CA261C40A976DE3ED0B9692B581EF7A1F61D683E63ACAD2B473C4076AA923CE44E863DAC57C9AA89E63",
                            Role = "ADMIN",
                            Salt = new byte[] { 144, 31, 196, 219, 153, 232, 189, 177, 33, 143, 244, 162, 79, 71, 129, 17, 219, 132, 71, 64, 189, 41, 216, 247, 217, 255, 199, 80, 219, 49, 194, 235, 95, 4, 140, 178, 84, 3, 11, 107, 211, 143, 6, 70, 131, 165, 93, 201, 191, 49, 253, 100, 229, 27, 10, 230, 159, 156, 108, 105, 156, 46, 149, 23 }
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(7863),
                            Email = "kikimaher@gmail.com",
                            FirstName = "Kristijan",
                            IsDeleted = true,
                            LastName = "Trnjanac",
                            ModifiedDate = new DateTime(2023, 2, 20, 15, 25, 45, 272, DateTimeKind.Local).AddTicks(7893),
                            Password = "BBC09AA7C466013AFD04A7C06296DAB7E78FDB5118EAB4559FF1862BF03BBC7589CEBEC1F371FAC8E74072C6C900DD9B9B5033D33EB65562D9B5E0CC9289C177",
                            Role = "USER",
                            Salt = new byte[] { 98, 198, 36, 157, 106, 237, 155, 171, 50, 7, 87, 167, 208, 5, 254, 64, 249, 66, 231, 211, 149, 28, 226, 243, 229, 232, 133, 91, 101, 163, 213, 39, 159, 0, 97, 197, 156, 110, 43, 152, 180, 112, 25, 7, 11, 129, 87, 237, 195, 179, 63, 162, 39, 215, 50, 172, 98, 205, 40, 136, 54, 248, 39, 222 }
                        });
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("LibraryApp.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
