// <auto-generated />
using System;
using LibraryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230213085912_AddSaltToUser")]
    partial class AddSaltToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<long>("AuthorsId")
                        .HasColumnType("bigint");

                    b.Property<long>("BooksId")
                        .HasColumnType("bigint");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("LibraryApp.Models.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9284),
                            FirstName = "Ljubo",
                            LastName = "Nedovic",
                            ModifiedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9285)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9317),
                            FirstName = "Rade",
                            LastName = "Doroslovacki",
                            ModifiedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9318)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9321),
                            FirstName = "Damir",
                            LastName = "Madjarevic",
                            ModifiedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9322)
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9261),
                            ModifiedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9262),
                            Name = "Algebra Testovi"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9266),
                            ModifiedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9267),
                            Name = "Algebra"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9269),
                            ModifiedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9271),
                            Name = "Mehanika"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9273),
                            ModifiedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9274),
                            Name = "Zbirka zadataka iz Mehanike"
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9112),
                            Email = "dane.m.12@gmail.com",
                            FirstName = "Dane",
                            LastName = "Milisic",
                            ModifiedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9141),
                            Password = "123",
                            Role = "USER",
                            Salt = new byte[] { 136, 206, 87, 223, 204, 1, 250, 53, 117, 37, 133, 48, 33, 231, 242, 89, 68, 84, 62, 152, 52, 97, 235, 251, 89, 7, 173, 31, 116, 217, 25, 178, 219, 38, 92, 151, 100, 196, 237, 25, 110, 125, 2, 69, 137, 51, 24, 130, 9, 124, 133, 207, 91, 156, 95, 170, 133, 219, 106, 113, 202, 29, 118, 8 }
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9238),
                            Email = "woox.gg@gmail.com",
                            FirstName = "Nikola",
                            LastName = "Vukic",
                            ModifiedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9239),
                            Password = "123",
                            Role = "LIBRARIAN",
                            Salt = new byte[] { 72, 2, 103, 91, 128, 251, 231, 235, 153, 71, 124, 146, 110, 248, 173, 11, 203, 161, 64, 3, 101, 128, 53, 251, 138, 180, 37, 227, 186, 123, 23, 204, 232, 97, 123, 104, 18, 188, 197, 127, 175, 11, 169, 123, 10, 196, 2, 224, 106, 139, 81, 9, 246, 107, 198, 175, 7, 33, 49, 25, 73, 147, 255, 44 }
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9244),
                            Email = "djokeen@gmail.com",
                            FirstName = "Djordje",
                            LastName = "Rasic",
                            ModifiedDate = new DateTime(2023, 2, 13, 9, 59, 12, 208, DateTimeKind.Local).AddTicks(9245),
                            Password = "123",
                            Role = "ADMIN",
                            Salt = new byte[] { 132, 49, 5, 156, 199, 38, 138, 214, 163, 79, 158, 197, 225, 163, 175, 7, 44, 166, 130, 223, 30, 50, 13, 112, 103, 52, 167, 39, 46, 61, 70, 82, 119, 138, 20, 104, 125, 150, 86, 99, 25, 107, 35, 199, 56, 48, 131, 187, 115, 122, 19, 63, 26, 123, 181, 208, 244, 157, 22, 221, 101, 75, 158, 246 }
                        });
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("LibraryApp.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
